#define ADC_VREF_mV    3300.0 // en milivoltios
#define ADC_RESOLUTION 4096.0
                  // a   b   c  d    e   f g

                  // a   b   c  d    e   f g
int segmentos[7] = {25, 23, 5, 21, 18, 22, 19};

#define PIN_LM35 36 // Cambiado a pin GPIO36 para la lectura analógica en un ESP32
float valorsensor;
int dig[] = {32, 33, 15, 4};
int num[10][7] = {
  // a b   c  d  e   f g
    {1, 1, 1, 1, 1, 1, 0}, // 0
    {0, 1, 1, 0, 0, 0, 0}, // 1
    {1, 1, 0, 1, 1, 0, 1}, // 2
    {1, 1, 1, 1, 0, 0, 1}, // 3
    {0, 1, 1, 0, 0, 1, 1}, // 4
    {1, 0, 1, 1, 0, 1, 1}, // 5
    {1, 0, 1, 1, 1, 1, 1}, // 6
    {1, 1, 1, 0, 0, 0, 0}, // 7
    {1, 1, 1, 1, 1, 1, 1}, // 8
    {1, 1, 1, 0, 0, 1, 1}  // 9
};

void setup()
{
    Serial.begin(115200);

    for (int i = 0; i < 8; i++)
    {
        pinMode(segmentos[i], OUTPUT);
    }
    for (int k = 0; k < 9; k++)
    {
        pinMode(dig[k], OUTPUT);
        digitalWrite(dig[k], HIGH); // Cambiado a HIGH para apagar los displays
    }
}

void loop()
{
    valorsensor = analogRead(PIN_LM35); // Leer el valor del sensor LM35

    // Convertir el valor del ADC a voltaje en milivoltios
    float milliVolt = valorsensor * (ADC_VREF_mV / ADC_RESOLUTION);
    // Convertir el voltaje a temperatura en °C
    float tempC = milliVolt / 10;
    // Convertir de °C a °F
    float tempF = tempC * 9 / 5 + 32;

    Serial.print("Temperatura: ");
    Serial.print(tempC); // Imprimir la temperatura en °C
    Serial.print("°C");
    Serial.print("  ~  "); // Separador entre °C y °F
    Serial.print(tempF);
    Serial.println("°F");

    int decena = tempC / 10;
    int unidad = (tempC - (decena * 10));
    int decimal = tempC * 10 - (decena * 10 * 100 + unidad * 10);
    int valor[3] = {decena, unidad, decimal};

    for (int j = 0; j < 3; j++)
    {
        for (int s = 0; s < 7; s++)
        {
            digitalWrite(segmentos[s], num[valor[j]][s]);
        }
        digitalWrite(dig[j], LOW);
        delay(10);
        digitalWrite(dig[j], HIGH);
    }
}
